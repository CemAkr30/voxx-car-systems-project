version: "3.8"

services:
  nginx:
    image: nginx:latest
    container_name: voxx-car-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
      - client
    networks:
      - voxx-car-network
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: voxx-car-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --webroot -w /var/www/certbot; done;'"
    networks:
      - voxx-car-network

  app:
    build:
      context: ./voxx-car-server
      dockerfile: Dockerfile
    container_name: voxx-car-app
    ports:
      - "9090:9090"
    environment:
      - JAVA_OPTS=-Xms512m -Xmx1024m
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
    restart: unless-stopped
    networks:
      - voxx-car-network
    depends_on:
      app_postgres:
        condition: service_healthy

  client:
    build:
      context: ./voxx-car-client
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: "https://voxxcarsystems.online/api/"
    container_name: voxx-car-ui
    ports:
      - "3000:80"
    restart: unless-stopped
    networks:
      - voxx-car-network

  app_postgres:
    container_name: postgres-service
    image: postgres:14
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: voxx_car_systems
    volumes:
      - app-db:/var/lib/postgresql/data
    ports:
      - "5400:5432"
    networks:
      - voxx-car-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U username -d voxx_car_systems" ]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper-service
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - voxx-car-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-service
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_HOST_NAME}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - voxx-car-network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop-ui
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    networks:
      - voxx-car-network

  kc_postgres:
    container_name: kc_db
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: keycloak
    volumes:
      - kc-db:/var/lib/postgresql/data
    networks:
      - voxx-car-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak -d keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    container_name: keycloak-service
    image: quay.io/keycloak/keycloak:23.0.6
    command: start-dev --import-realm
    environment:
      DB_VENDOR: postgres
      DB_ADDR: kc_postgres
      DB_PORT: "5432"
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: 123456
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./infrastructure/keycloak/realm-config:/opt/keycloak/data/import
    depends_on:
      kc_postgres:
        condition: service_healthy
    networks:
      - voxx-car-network

  couchbase:
    image: couchbase:community
    container_name: couchbase-service
    ports:
      - "8091-8094:8091-8094"
      - "11210:11210"
    environment:
      CB_ADMIN_USERNAME: Administrator
      CB_ADMIN_PASSWORD: password
      CB_BUCKET_NAME: car-bucket
      CB_USER: caruser
      CB_USER_PASSWORD: caruserpass
      CB_BUCKET_RAMSIZE: 512
    volumes:
      - ./infrastructure/couchbase/entrypoint.sh:/opt/couchbase/entrypoint.sh:ro
    networks:
      - voxx-car-network
    entrypoint: [ "/bin/bash", "/opt/couchbase/entrypoint.sh" ]

networks:
  voxx-car-network:
    name: voxx-car-network
    driver: bridge

volumes:
  app-db:
  kc-db: